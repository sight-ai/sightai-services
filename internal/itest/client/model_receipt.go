/*
SIGHTAI-SERVICES

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Receipt struct for Receipt
type Receipt struct {
	Id int64 `json:"id"`
	UserAddress string `json:"user_address"`
	GatewayAddress string `json:"gateway_address"`
	FinishedAt *time.Time `json:"finished_at,omitempty"`
	Cost *string `json:"cost,omitempty"`
	Proof *string `json:"proof,omitempty"`
	TxnId *string `json:"txn_id,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewReceipt instantiates a new Receipt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReceipt(id int64, userAddress string, gatewayAddress string) *Receipt {
	this := Receipt{}
	this.Id = id
	this.UserAddress = userAddress
	this.GatewayAddress = gatewayAddress
	return &this
}

// NewReceiptWithDefaults instantiates a new Receipt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReceiptWithDefaults() *Receipt {
	this := Receipt{}
	return &this
}

// GetId returns the Id field value
func (o *Receipt) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Receipt) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Receipt) SetId(v int64) {
	o.Id = v
}

// GetUserAddress returns the UserAddress field value
func (o *Receipt) GetUserAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAddress
}

// GetUserAddressOk returns a tuple with the UserAddress field value
// and a boolean to check if the value has been set.
func (o *Receipt) GetUserAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAddress, true
}

// SetUserAddress sets field value
func (o *Receipt) SetUserAddress(v string) {
	o.UserAddress = v
}

// GetGatewayAddress returns the GatewayAddress field value
func (o *Receipt) GetGatewayAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayAddress
}

// GetGatewayAddressOk returns a tuple with the GatewayAddress field value
// and a boolean to check if the value has been set.
func (o *Receipt) GetGatewayAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayAddress, true
}

// SetGatewayAddress sets field value
func (o *Receipt) SetGatewayAddress(v string) {
	o.GatewayAddress = v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *Receipt) GetFinishedAt() time.Time {
	if o == nil || o.FinishedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil || o.FinishedAt == nil {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *Receipt) HasFinishedAt() bool {
	if o != nil && o.FinishedAt != nil {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given time.Time and assigns it to the FinishedAt field.
func (o *Receipt) SetFinishedAt(v time.Time) {
	o.FinishedAt = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *Receipt) GetCost() string {
	if o == nil || o.Cost == nil {
		var ret string
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetCostOk() (*string, bool) {
	if o == nil || o.Cost == nil {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *Receipt) HasCost() bool {
	if o != nil && o.Cost != nil {
		return true
	}

	return false
}

// SetCost gets a reference to the given string and assigns it to the Cost field.
func (o *Receipt) SetCost(v string) {
	o.Cost = &v
}

// GetProof returns the Proof field value if set, zero value otherwise.
func (o *Receipt) GetProof() string {
	if o == nil || o.Proof == nil {
		var ret string
		return ret
	}
	return *o.Proof
}

// GetProofOk returns a tuple with the Proof field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetProofOk() (*string, bool) {
	if o == nil || o.Proof == nil {
		return nil, false
	}
	return o.Proof, true
}

// HasProof returns a boolean if a field has been set.
func (o *Receipt) HasProof() bool {
	if o != nil && o.Proof != nil {
		return true
	}

	return false
}

// SetProof gets a reference to the given string and assigns it to the Proof field.
func (o *Receipt) SetProof(v string) {
	o.Proof = &v
}

// GetTxnId returns the TxnId field value if set, zero value otherwise.
func (o *Receipt) GetTxnId() string {
	if o == nil || o.TxnId == nil {
		var ret string
		return ret
	}
	return *o.TxnId
}

// GetTxnIdOk returns a tuple with the TxnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetTxnIdOk() (*string, bool) {
	if o == nil || o.TxnId == nil {
		return nil, false
	}
	return o.TxnId, true
}

// HasTxnId returns a boolean if a field has been set.
func (o *Receipt) HasTxnId() bool {
	if o != nil && o.TxnId != nil {
		return true
	}

	return false
}

// SetTxnId gets a reference to the given string and assigns it to the TxnId field.
func (o *Receipt) SetTxnId(v string) {
	o.TxnId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Receipt) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Receipt) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Receipt) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Receipt) SetStatus(v string) {
	o.Status = &v
}

func (o Receipt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["user_address"] = o.UserAddress
	}
	if true {
		toSerialize["gateway_address"] = o.GatewayAddress
	}
	if o.FinishedAt != nil {
		toSerialize["finished_at"] = o.FinishedAt
	}
	if o.Cost != nil {
		toSerialize["cost"] = o.Cost
	}
	if o.Proof != nil {
		toSerialize["proof"] = o.Proof
	}
	if o.TxnId != nil {
		toSerialize["txn_id"] = o.TxnId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableReceipt struct {
	value *Receipt
	isSet bool
}

func (v NullableReceipt) Get() *Receipt {
	return v.value
}

func (v *NullableReceipt) Set(val *Receipt) {
	v.value = val
	v.isSet = true
}

func (v NullableReceipt) IsSet() bool {
	return v.isSet
}

func (v *NullableReceipt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReceipt(val *Receipt) *NullableReceipt {
	return &NullableReceipt{value: val, isSet: true}
}

func (v NullableReceipt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReceipt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


