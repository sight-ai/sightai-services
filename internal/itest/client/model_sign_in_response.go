/*
SIGHTAI-SERVICES

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SignInResponse struct for SignInResponse
type SignInResponse struct {
	// user jwt token
	UserToken string `json:"user_token"`
}

// NewSignInResponse instantiates a new SignInResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignInResponse(userToken string) *SignInResponse {
	this := SignInResponse{}
	this.UserToken = userToken
	return &this
}

// NewSignInResponseWithDefaults instantiates a new SignInResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignInResponseWithDefaults() *SignInResponse {
	this := SignInResponse{}
	return &this
}

// GetUserToken returns the UserToken field value
func (o *SignInResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *SignInResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *SignInResponse) SetUserToken(v string) {
	o.UserToken = v
}

func (o SignInResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user_token"] = o.UserToken
	}
	return json.Marshal(toSerialize)
}

type NullableSignInResponse struct {
	value *SignInResponse
	isSet bool
}

func (v NullableSignInResponse) Get() *SignInResponse {
	return v.value
}

func (v *NullableSignInResponse) Set(val *SignInResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSignInResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSignInResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignInResponse(val *SignInResponse) *NullableSignInResponse {
	return &NullableSignInResponse{value: val, isSet: true}
}

func (v NullableSignInResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignInResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


