/*
SIGHTAI-SERVICES

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimpleMessageResponse struct for SimpleMessageResponse
type SimpleMessageResponse struct {
	Message string `json:"message"`
}

// NewSimpleMessageResponse instantiates a new SimpleMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleMessageResponse(message string) *SimpleMessageResponse {
	this := SimpleMessageResponse{}
	this.Message = message
	return &this
}

// NewSimpleMessageResponseWithDefaults instantiates a new SimpleMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleMessageResponseWithDefaults() *SimpleMessageResponse {
	this := SimpleMessageResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *SimpleMessageResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SimpleMessageResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SimpleMessageResponse) SetMessage(v string) {
	o.Message = v
}

func (o SimpleMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableSimpleMessageResponse struct {
	value *SimpleMessageResponse
	isSet bool
}

func (v NullableSimpleMessageResponse) Get() *SimpleMessageResponse {
	return v.value
}

func (v *NullableSimpleMessageResponse) Set(val *SimpleMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleMessageResponse(val *SimpleMessageResponse) *NullableSimpleMessageResponse {
	return &NullableSimpleMessageResponse{value: val, isSet: true}
}

func (v NullableSimpleMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


